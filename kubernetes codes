link - #https://kubernetes.io/docs/tasks/configure-pod-container/static-pod/#

# pod.yml file begins here

apiVersion: v1
kind: Pod
metadata:
  name: ecomm
  labels:
    appType: web
    appTech: html
spec:
  containers:
    - name: web
      image: nginx
      ports:
        - name: web
          containerPort: 80
          protocol: TCP
          
# pod.yml ends here


# Replication.yml starts here

Reference sample link - https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: frontend
  labels:
    app: web
    tier: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      tier: frontend
  template:
    metadata:
      labels:
        tier: frontend
    spec:
  containers:
    - name: apache
      image: httpd
      ports:
        - name: web
          containerPort: 80
          protocol: TCP
          
# replication.yaml ends here


# Deployment.yml starts here

Link - https://kubernetes.io/docs/concepts/workloads/controllers/deployment/

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
    tier: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
      tier: frontend
  template:
    metadata:
      labels:
        app: nginx
        tier: frontend
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80

# deployment.yml ends here


# Service.yml

link - https://kubernetes.io/docs/concepts/services-networking/service/ (load balancer example)

apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
  type: LoadBalancer

# service.yml ends here
